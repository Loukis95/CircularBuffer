name: Linux

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++-11, clang++-14]
        configuration: [Debug, Release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add toolchain PPA
      if: matrix.compiler == 'g++-11'
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      
    - name: Install compiler
      run: sudo apt-get update && sudo apt-get install -y ${{ matrix.compiler }}

    - name: Configure CMake
      run: cmake -D CMAKE_BUILD_TYPE=${{ matrix.configuration }} -D CMAKE_CXX_COMPILER=${{ matrix.compiler }} -D BUILD_TESTS=1 -S . -B build/${{ matrix.configuration }}

    - name: Build
      run: cmake --build build/${{ matrix.configuration }} -j $(nproc --all)
      
    - name: Run
      run: build/${{ matrix.configuration }}/CircularBuffer

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++-11, clang++-14]
        configuration: [Debug]
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add toolchain PPA
      if: matrix.compiler == 'g++-11'
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      
    - name: Install compiler
      run: sudo apt-get update && sudo apt-get install -y ${{ matrix.compiler }}

    - name: Configure CMake
      run: cmake -D CMAKE_BUILD_TYPE=${{ matrix.configuration }} -D CMAKE_CXX_COMPILER=${{ matrix.compiler }} -D BUILD_TESTS=1 -S . -B build/${{ matrix.configuration }}

    - name: Build
      run: cmake --build build/${{ matrix.configuration }} -j $(nproc --all)
      
    - name: Run unit tests
      run: |
        cd build/${{ matrix.configuration }}
        ctest --output-on-failure --schedule-random -j $(nproc --all)

  code-coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        compiler: [g++-11]
        configuration: [Debug]
            
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add toolchain PPA
      if: matrix.compiler == 'g++-11'
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      
    - name: Install compiler
      run: sudo apt-get update && sudo apt-get install -y ${{ matrix.compiler }} lcov

    - name: Configure CMake
      run: cmake -D CMAKE_BUILD_TYPE=${{ matrix.configuration }} -D CMAKE_CXX_COMPILER=${{ matrix.compiler }} -D GENERATE_COVERAGE_REPORT=1 -S . -B coverage/${{ matrix.configuration }}

    - name: Build
      run: cmake --build coverage/${{ matrix.configuration }} -j $(nproc --all)
      
    - name: Run unit tests
      run: |
        cd coverage/${{ matrix.configuration }}
        ctest --output-on-failure -j $(nproc --all)
        
    - name: Generate coverage data
      run: sh ./scripts/generate_coverage_report.sh coverage/Debug
      
    - name: Publish coverage data
      uses: crazy-max/ghaction-github-pages@v3.0.0
      with:
        build_dir: coverage/html
        keep_history: "true"
        target_branch: gh-pages/test
